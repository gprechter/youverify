arr1, arr2: ARRAY{INT}
are_mirrors: BOOL
i, sum, elem: INT
define populate(arr: ARRAY{INT}, len: INT):
	i: INT
	i = 0
	LABEL LOOP: if i >= len goto END
	arr[i] = $sym{INT}
	i = i + 1
	goto LOOP
	LABEL END: return

define mirrors(arr1: ARRAY{INT}, arr2: ARRAY{INT}, len: INT) -> BOOL:
	e1, e2, i, j: INT
	i = 0
	LABEL LOOP: if i >= len goto END
	e1 = arr1[i]
	j = len - i
	j = j - 1
	e2 = arr2[j]
	if e1 == e2 goto ELSE
	return false
	LABEL ELSE: i = i + 1
	goto LOOP
	LABEL END: return true

arr1 = ARRAY[10]{0}
call populate(arr1, 10)
arr2 = ARRAY[10]{0}
call populate(arr2, 10)
call are_mirrors = mirrors(arr1, arr2, 10)
assert are_mirrors
i = 0
sum = 0
LABEL LOOP: if i >= 10 goto END
elem = arr1[i]
sum = sum + elem
i = i + 1
goto LOOP
LABEL END: i = 0
assume sum == 100